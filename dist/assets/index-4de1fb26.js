var B=Object.defineProperty;var O=(c,t,s)=>t in c?B(c,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):c[t]=s;var r=(c,t,s)=>(O(c,typeof t!="symbol"?t+"":t,s),s);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))i(e);new MutationObserver(e=>{for(const n of e)if(n.type==="childList")for(const a of n.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&i(a)}).observe(document,{childList:!0,subtree:!0});function s(e){const n={};return e.integrity&&(n.integrity=e.integrity),e.referrerPolicy&&(n.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?n.credentials="include":e.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(e){if(e.ep)return;e.ep=!0;const n=s(e);fetch(e.href,n)}})();class W{constructor(t,s){r(this,"pos");r(this,"rot");this.pos=t,s.x=m(s.x),s.y=m(s.y),s.z=m(s.z),this.rot=s}}class l{constructor(t,s,i){r(this,"x");r(this,"y");r(this,"z");this.x=t,this.y=s,this.z=i}format(){return`(${this.x}, ${this.y}, ${this.z})`}clone(){return new l(this.x,this.y,this.z)}rotateX(t){const s=this.y,i=this.z;this.y=s*Math.cos(t)-i*Math.sin(t),this.z=s*Math.sin(t)+i*Math.cos(t)}rotateY(t){const s=this.x,i=this.z;this.x=s*Math.cos(t)+i*Math.sin(t),this.z=-s*Math.sin(t)+i*Math.cos(t)}rotateZ(t){const s=this.x,i=this.y;return this.x=s*Math.cos(t)-i*Math.sin(t),this.y=s*Math.sin(t)+i*Math.cos(t),this}rotate(t){return this.rotateZ(d(t.z)),this.rotateX(d(t.x)),this.rotateY(d(t.y)),this}multiply(t){return this.x*=t,this.y*=t,this.z*=t,this}divide(t){return this.x/=t,this.y/=t,this.z/=t,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}getMag(){return E(E(this.x,this.y),this.z)}getRotation(){const t=m(Math.atan2(this.x,this.z)),s=m(Math.atan2(this.y,this.z));return new M(s,t)}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}normalize(){const t=this.getMag();return this.x/=t,this.y/=t,this.z/=t,this}cross(t){const s=[this.y,this.z,t.y,t.z],i=[this.x,this.z,t.x,t.z],e=[this.x,this.y,t.x,t.y],n=s[0]*s[3]-s[1]*s[2],a=i[0]*i[3]-i[1]*i[2],h=e[0]*e[3]-e[1]*e[2];return new l(n,-a,h)}}class M{constructor(t,s){r(this,"x");r(this,"y");this.x=t,this.y=s}getRotation(){return m(Math.atan2(this.y,this.x))}getMag(){return E(this.x,this.y)}rotate(t){const s=this.getRotation(),i=this.getMag();return this.x=Math.cos(d(s+t))*i,this.y=Math.sin(d(s+t))*i,this}draw(t,s=new M(0,0),i=new x(0,0,0),e=1){t.beginPath(),t.strokeStyle=i.toHex(),t.lineWidth=e,t.moveTo(s.x,s.y),t.lineTo(s.x+this.x,s.y+this.y),t.stroke(),t.closePath()}normalize(){const t=this.getMag();return t!=0&&(this.x/=t,this.y/=t),this}multiply(t){return this.x*=t,this.y*=t,this}sub(t){return this.x-=t.x,this.y-=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}divide(t){return this.x/=t,this.y/=t,this}appendMag(t){const s=this.getMag();if(s!=0){const i=s+t;this.normalize(),this.multiply(i)}return this}clone(){return new M(this.x,this.y)}format(){return`(${this.x}, ${this.y})`}}class x{constructor(t,s,i,e=1){r(this,"r");r(this,"g");r(this,"b");r(this,"a");this.r=t,this.g=s,this.b=i,this.a=e}clone(){return new x(this.r,this.g,this.b,this.a)}compToHex(t){const s=Math.round(t).toString(16);return s.length==1?"0"+s:s}toHex(){return"#"+this.compToHex(this.r)+this.compToHex(this.g)+this.compToHex(this.b)+this.compToHex(this.a*255)}}class Y{constructor(t,s=new x(0,0,0),i=!1,e=null,n=""){r(this,"pos");r(this,"color");r(this,"sim");r(this,"type");r(this,"running");r(this,"_3d",!0);r(this,"id");r(this,"lightSources",[]);r(this,"lighting");this.pos=t,this.color=s,this.sim=null,this.type=e,this.running=!0,this.id=n,this.lighting=i}setLightSources(t){this.lightSources=t}setId(t){this.id=t}end(){this.running=!1}draw(t,s,i,e){}setSimulationElement(t){this.sim=t}fill(t,s=0,i){const e=new x(this.color.r,this.color.g,this.color.b),n=t.clone(),a=n.r-this.color.r,h=n.g-this.color.g,o=n.b-this.color.b,u=()=>{this.color=n};return p(u,g=>(e.r+=a*g,e.g+=h*g,e.b+=o*g,this.color.r=e.r,this.color.g=e.g,this.color.b=e.b,this.running),u,s,i)}moveTo(t,s=0,i){const e=t.x-this.pos.x,n=t.y-this.pos.y,a=t.z-this.pos.z;return p(()=>{this.pos=t},h=>(this.pos.x+=e*h,this.pos.y+=n*h,this.pos.z+=a*h,this.running),()=>{this.pos.x=t.x,this.pos.y=t.y,this.pos.z=t.z},s,i)}move(t,s=0,i){const e=t.x,n=t.y,a=t.z,h=new l(this.pos.x,this.pos.y,this.pos.z);return p(()=>{this.pos.x+=t.x,this.pos.y+=t.y,this.pos.z+=t.z},o=>(this.pos.x+=e*o,this.pos.y+=n*o,this.pos.z+=a*o,this.running),()=>{this.pos.x=h.x+t.x,this.pos.y=h.y+t.y,this.pos.z=h.z+t.z},s,i)}}class b extends Y{constructor(s,i,e=new x(0,0,0),n=!0,a=!1,h=!1){super(s,e,h,"plane");r(this,"points");r(this,"wireframe");r(this,"fillPlane");this.points=i,this.fillPlane=n,this.wireframe=a}clone(){return new b(this.pos.clone(),this.points.map(s=>s.clone()),this.color.clone(),this.fillPlane,this.wireframe)}setPoints(s,i=0,e){const n=this.points.length>0?this.points[this.points.length-1]:new l(0,0,0);if(s.length>this.points.length)for(;s.length>this.points.length;)this.points.push(new l(n.x,n.y,n.z));const a=this.points.map(o=>o.clone()),h=[...s.map((o,u)=>o.clone().sub(this.points[u])),...this.points.slice(s.length,this.points.length).map(o=>(s[s.length-1]||new l(0,0,0)).clone().sub(o))];return p(()=>{this.points=s.map(o=>new l(o.x,o.y,o.z))},o=>(this.points=this.points.map((u,g)=>{var y,z,C;return u.x+=(((y=h[g])==null?void 0:y.x)||0)*o,u.y+=(((z=h[g])==null?void 0:z.y)||0)*o,u.z+=(((C=h[g])==null?void 0:C.z)||0)*o,u}),this.running),()=>{this.points=a.map((o,u)=>(o.x+=h[u].x,o.y+=h[u].y,o.z+=h[u].z,o.clone())),this.points.splice(s.length,this.points.length)},i,e)}draw(s,i,e){let a=.25;if(this.lighting)for(let o=0;o<this.lightSources.length;o++){const u=this.getCenter(),g=this.getNormals(),y=new l(u.x-this.lightSources[o].x,u.y-this.lightSources[o].y,u.z+this.lightSources[o].z),z=X(g[0],y),C=X(g[1],y),Z=Math.min(z,C);a+=Math.max(.25,Math.max(0,90-Z)/90),a=Math.min(a,1)}s.beginPath(),s.strokeStyle="#000000";const h=this.color.clone();this.lighting&&(h.r*=a,h.g*=a,h.b*=a),s.fillStyle=h.toHex(),s.lineWidth=2;for(let o=0;o<this.points.length;o++){let u,g;o===this.points.length-1?(u=P(this.points[o],i,e),g=P(this.points[0],i,e)):(u=P(this.points[o],i,e),g=P(this.points[o+1],i,e)),!u.behindCamera&&!g.behindCamera&&(o===0&&s.moveTo(u.point.x,u.point.y),s.lineTo(g.point.x,g.point.y))}this.wireframe&&s.stroke(),this.fillPlane&&s.fill(),s.closePath()}getNormals(){if(this.points.length>=3){const s=this.points[0].clone().sub(this.points[1]),i=this.points[1].clone().sub(this.points[2]),e=s.cross(i).normalize();return[e,e.clone().multiply(-1)]}return[new l(0,0,0),new l(0,0,0)]}getCenter(){const s=this.points.reduce((i,e)=>i.add(e),new l(0,0,0));return s.divide(this.points.length),s}}class _ extends Y{constructor(s,i,e,n,a=new x(0,0,0),h=new l(0,0,0),o=!0,u=!1,g=!1){super(s,a,g,"cube");r(this,"width");r(this,"height");r(this,"depth");r(this,"planes",[]);r(this,"points",[]);r(this,"rotation");r(this,"fillCube");r(this,"wireframe");this.width=i,this.height=e,this.depth=n,this.wireframe=u,this.fillCube=o,this.rotation=h,this.generatePoints(),this.generatePlanes()}generatePoints(){this.points=[new l(-this.width/2,-this.height/2,-this.depth/2),new l(this.width/2,-this.height/2,-this.depth/2),new l(this.width/2,this.height/2,-this.depth/2),new l(-this.width/2,this.height/2,-this.depth/2),new l(-this.width/2,-this.height/2,this.depth/2),new l(this.width/2,-this.height/2,this.depth/2),new l(this.width/2,this.height/2,this.depth/2),new l(-this.width/2,this.height/2,this.depth/2)],this.generatePlanes()}generatePlanes(){const s=this.points.map(i=>i.clone().rotate(this.rotation).add(this.pos));this.planes=[new b(this.pos,[s[0],s[1],s[2],s[3]],this.color,this.fillCube,this.wireframe,this.lighting),new b(this.pos,[s[0],s[1],s[5],s[4]],this.color,this.fillCube,this.wireframe,this.lighting),new b(this.pos,[s[4],s[5],s[6],s[7]],this.color,this.fillCube,this.wireframe,this.lighting),new b(this.pos,[s[3],s[2],s[6],s[7]],this.color,this.fillCube,this.wireframe,this.lighting),new b(this.pos,[s[0],s[3],s[7],s[4]],this.color,this.fillCube,this.wireframe,this.lighting),new b(this.pos,[s[2],s[1],s[5],s[6]],this.color,this.fillCube,this.wireframe,this.lighting)].map(i=>(i.setLightSources(this.lightSources),i))}rotate(s,i=0,e){const n=this.rotation.clone();return p(()=>{this.rotation.x=n.x+s.x,this.rotation.y=n.y+s.y,this.rotation.z=n.z+s.z},a=>(this.rotation.x+=s.x*a,this.rotation.y+=s.y*a,this.rotation.z+=s.z*a,this.running),()=>{this.rotation.x=n.x+s.x,this.rotation.y=n.y+s.y,this.rotation.z=n.z+s.z},i,e)}rotateTo(s,i=0,e){const n=s.x-this.rotation.x,a=s.y-this.rotation.y,h=s.z-this.rotation.z;return p(()=>{this.rotation.x=s.x,this.rotation.y=s.y,this.rotation.z=s.z},o=>(this.rotation.x+=n*o,this.rotation.y+=a*o,this.rotation.z+=h*o,this.running),()=>{this.rotation.x=s.x,this.rotation.y=s.y,this.rotation.z=s.z},i,e)}draw(s,i,e){this.generatePoints(),this.planes=G(this.planes,i);for(let n=0;n<this.planes.length;n++)this.planes[n].draw(s,i,e)}}class ${constructor(t,s){r(this,"event");r(this,"callback");this.event=t,this.callback=s}}class N{constructor(t,s=new l(0,0,-200),i=new l(0,0,0),e,n=new M(0,0),a){r(this,"scene");r(this,"fitting");r(this,"bgColor");r(this,"canvas",null);r(this,"width",0);r(this,"height",0);r(this,"ratio");r(this,"running");r(this,"_prevReq");r(this,"events");r(this,"ctx",null);r(this,"camera");r(this,"center");r(this,"displaySurface");r(this,"forward",new l(0,0,1));r(this,"backward",new l(0,0,-1));r(this,"left",new l(-1,0,0));r(this,"right",new l(1,0,0));r(this,"up",new l(0,-1,0));r(this,"down",new l(0,1,0));r(this,"lightSources");this.scene=[],this.fitting=!1,this.bgColor=new x(255,255,255),this.running=!0,this._prevReq=0,this.events=[],this.camera=new W(s,i),this.center=n,this.displaySurface=new l(0,0,0),this.ratio=window.devicePixelRatio,this.lightSources=[],this.setDirections();const h=2e3;if(this.canvas=document.getElementById(t),!this.canvas){console.error(`Canvas with id "${t}" not found`);return}window.addEventListener("resize",()=>this.resizeCanvas(this.canvas)),this.resizeCanvas(this.canvas),a?this.displaySurface=new l(a.x,a.y,e||h):this.displaySurface=new l(this.width/2,this.height/2,e||h);const o=this.canvas.getContext("2d");o&&(this.ctx=o,this.render(o))}setLightSources(t){this.lightSources=t,this.scene.forEach(s=>{s._3d&&s.setLightSources(t)})}setDirections(){const t=new l(m(this.camera.rot.y),m(this.camera.rot.x),m(this.camera.rot.z));this.forward=new l(0,0,1).rotate(t),this.backward=this.forward.clone().multiply(-1),this.left=new l(-1,0,0).rotate(t),this.right=this.left.clone().multiply(-1)}render(t){if(this.canvas){t.clearRect(0,0,this.canvas.width,this.canvas.height),t.beginPath(),t.fillStyle=this.bgColor.toHex(),t.fillRect(0,0,this.canvas.width,this.canvas.height),t.closePath();for(const s of this.scene)s._3d?s.draw(t,this.camera,this.displaySurface,this.ratio):s.draw(t);this.running&&(this._prevReq=window.requestAnimationFrame(()=>this.render(t)))}}end(){this.running=!1;for(let t=0;t<this.scene.length;t++)this.scene[t].end();window.removeEventListener("resize",()=>this.resizeCanvas(this.canvas)),window.cancelAnimationFrame(this._prevReq)}add(t,s=null){this.canvas&&(t.setSimulationElement(this.canvas),s!==null&&t.setId(s),t._isSceneCollection&&t.set3dObjects(this.camera,this.displaySurface,this.ratio),this.scene.push(t))}removeWithId(t){this.scene=this.scene.filter(s=>s.id!==t)}removeWithObject(t){this.scene=this.scene.filter(s=>s===t)}on(t,s){this.canvas&&(this.events.push(new $(t,s)),this.canvas.addEventListener(t,s))}removeListener(t,s){this.events=this.events.filter(i=>i.event===t&&i.callback==s?(this.canvas&&this.canvas.removeEventListener(i.event,i.callback),!1):!0)}fitElement(){this.canvas&&(this.fitting=!0,this.resizeCanvas(this.canvas))}setSize(t,s){this.canvas&&(this.canvas.width=t,this.canvas.height=s,this.fitting=!1)}setBgColor(t){this.bgColor=t.clone()}resizeCanvas(t){if(t&&this.canvas){if(this.fitting&&t.parentElement){const s=t.parentElement.clientWidth,i=t.parentElement.clientHeight;this.canvas.width=s*this.ratio,this.canvas.height=i*this.ratio,this.canvas.style.width=s+"px",this.canvas.style.height=i+"px"}this.width=this.canvas.width,this.height=this.canvas.height,this.displaySurface.x=this.width/2,this.displaySurface.y=this.height/2}}empty(){this.scene=[]}moveCamera(t,s=0,i){const e=this.camera.pos.clone();return p(()=>{this.camera.pos.add(t)},n=>(this.camera.pos.x+=t.x*n,this.camera.pos.y+=t.y*n,this.camera.pos.z+=t.z*n,this.running),()=>{this.camera.pos=e.add(t)},s,i)}moveCameraTo(t,s=0,i){const e=t.x-this.camera.pos.x,n=t.y-this.camera.pos.y,a=t.z-this.camera.pos.z;return p(()=>{this.camera.pos=t.clone()},h=>(this.camera.pos.x+=e*h,this.camera.pos.y+=n*h,this.camera.pos.z+=a*h,this.running),()=>{this.camera.pos=t.clone()},s,i)}rotateCamera(t,s=0,i){const e=this.camera.rot.clone();return p(()=>{this.camera.rot.x=e.x+d(t.x),this.camera.rot.y=e.y+d(t.y),this.camera.rot.z=e.z+d(t.z),this.setDirections()},n=>(this.camera.rot.x+=d(t.x)*n,this.camera.rot.y+=d(t.y)*n,this.camera.rot.z+=d(t.z)*n,this.setDirections(),this.running),()=>{this.camera.rot.x=e.x+d(t.x),this.camera.rot.y=e.y+d(t.y),this.camera.rot.z=e.z+d(t.z),this.setDirections()},s,i)}rotateCameraTo(t,s=0,i){const e=d(t.x)-this.camera.rot.x,n=d(t.y)-this.camera.rot.y,a=d(t.z)-this.camera.rot.z;return p(()=>{this.camera.rot=t.clone(),this.setDirections()},h=>(this.camera.rot.x+=e*h,this.camera.rot.y+=n*h,this.camera.rot.z+=a*h,this.setDirections(),this.running),()=>{this.camera.rot=t.clone(),this.setDirections()},s,i)}}function E(c,t){return Math.sqrt(Math.pow(c,2)+Math.pow(t,2))}function v(c,t){return Math.sqrt(Math.pow(t.x-c.x,2)+Math.pow(t.y-c.y,2)+Math.pow(t.z-c.z,2))}function d(c){return c*Math.PI/180}function m(c){return c*180/Math.PI}function j(c){return c}function p(c,t,s,i,e){return new Promise(n=>{if(i==0)c(),n();else{const a=1/(60*i);let h=0,o=0;const u=(g,y)=>{const z=y(g);if(!t(z-h)){window.cancelAnimationFrame(o);return}h=z,g<1?o=window.requestAnimationFrame(()=>u(g+a,y)):(s(),n())};u(0,e||j)}})}function K(c){let t=0;function s(...i){let e=c(...i);if(e===!1){window.cancelAnimationFrame(t);return}Array.isArray(e)||(e=i),t=window.requestAnimationFrame(()=>s(...e))}return(...i)=>{s(...i)}}function H(c,t){return c.reduce((s,i)=>v(i,t.pos)<=v(s,t.pos)?i:s,c[0])}function q(c,t){return c.reduce((s,i)=>s+v(i,t.pos),0)}function G(c,t){return c.sort((i,e)=>{const n=H(i.points,t),a=H(e.points,t),h=v(n,t.pos),o=v(a,t.pos);if(h===o){const u=q(i.points,t);return q(e.points,t)-u}return o-h})}function P(c,t,s){const i=[[1,0,0],[0,Math.cos(t.rot.x),Math.sin(t.rot.x)],[0,-Math.sin(t.rot.x),Math.cos(t.rot.x)]],e=[[Math.cos(t.rot.y),0,-Math.sin(t.rot.y)],[0,1,0],[Math.sin(t.rot.y),0,Math.cos(t.rot.y)]],n=[[Math.cos(t.rot.z),Math.sin(t.rot.z),0],[-Math.sin(t.rot.z),Math.cos(t.rot.z),0],[0,0,1]],a=[[c.x-t.pos.x],[c.y-t.pos.y],[c.z-t.pos.z]],h=[[i[0][0]*e[0][0]+i[0][1]*e[1][0]+i[0][2]*e[2][0],i[0][0]*e[0][1]+i[0][1]*e[1][1]+i[0][2]*e[2][1],i[0][0]*e[0][2]+i[0][1]*e[1][2]+i[0][2]*e[2][2]],[i[1][0]*e[0][0]+i[1][1]*e[1][0]+i[1][2]*e[2][0],i[1][0]*e[0][1]+i[1][1]*e[1][1]+i[1][2]*e[2][1],i[1][0]*e[0][2]+i[1][1]*e[1][2]+i[1][2]*e[2][2]],[i[2][0]*e[0][0]+i[2][1]*e[1][0]+i[2][2]*e[2][0],i[2][0]*e[0][1]+i[2][1]*e[1][1]+i[2][2]*e[2][1],i[2][0]*e[0][2]+i[2][1]*e[1][2]+i[2][2]*e[2][2]]],o=[[h[0][0]*n[0][0]+h[0][1]*n[1][0]+h[0][2]*n[2][0],h[0][0]*n[0][1]+h[0][1]*n[1][1]+h[0][2]*n[2][1],h[0][0]*n[0][2]+h[0][1]*n[1][2]+h[0][2]*n[2][2]],[h[1][0]*n[0][0]+h[1][1]*n[1][0]+h[1][2]*n[2][0],h[1][0]*n[0][1]+h[1][1]*n[1][1]+h[1][2]*n[2][1],h[1][0]*n[0][2]+h[1][1]*n[1][2]+h[1][2]*n[2][2]],[h[2][0]*n[0][0]+h[2][1]*n[1][0]+h[2][2]*n[2][0],h[2][0]*n[0][1]+h[2][1]*n[1][1]+h[2][2]*n[2][1],h[2][0]*n[0][2]+h[2][1]*n[1][2]+h[2][2]*n[2][2]]],u=[[o[0][0]*a[0][0]+o[0][1]*a[1][0]+o[0][2]*a[2][0]],[o[1][0]*a[0][0]+o[1][1]*a[1][0]+o[1][2]*a[2][0]],[o[2][0]*a[0][0]+o[2][1]*a[1][0]+o[2][2]*a[2][0]]],g=new l(u[0][0],u[1][0],u[2][0]),y=s.z*g.x/g.z+s.x,z=s.z*g.y/g.z+s.y;return{point:new M(y,z),behindCamera:g.z<=0}}function X(c,t){let i=c.dot(t)/(c.getMag()*t.getMag());return i=Math.acos(i),m(i)}const f=new N("canvas",new l(0,0,-250),new l(0,0,0));f.fitElement();const F=new _(new l(0,0,0),100,100,100,new x(0,123,255,.3),new l(0,0,0),!0,!0,!0);f.add(F);f.setLightSources([new l(100,100,-100)]);console.log(new x(0,123,255,.3).toHex());(async function c(){await F.rotate(new l(360,360,0),4),c()})();let L=!1,D=!1,T=!1,R=!1,A=!1,k=!1;const J={w:()=>L=!0,a:()=>D=!0,s:()=>T=!0,d:()=>R=!0," ":()=>A=!0,shift:()=>k=!0},V={w:()=>L=!1,a:()=>D=!1,s:()=>T=!1,d:()=>R=!1," ":()=>A=!1,shift:()=>k=!1};let I=!1;f.on("mousedown",()=>{I=!0});f.on("mouseup",()=>{I=!1});let S=new M(0,0);f.on("mousemove",c=>{const s=new M(c.offsetX,c.offsetY);if(I){const i=new M(m(s.y-S.y)/1e3,m(s.x-S.x)/1e3);i.x*=-1,i.multiply(-1),f.rotateCamera(new l(i.x,i.y,0))}S=s});addEventListener("keydown",c=>{const t=J[c.key.toLowerCase()];t&&t()});addEventListener("keyup",c=>{const t=V[c.key.toLowerCase()];t&&t()});const w=2;K(()=>{L&&f.moveCamera(new l(Math.sin(f.camera.rot.y)*Math.cos(f.camera.rot.x)*w,0,Math.cos(f.camera.rot.y)*Math.cos(f.camera.rot.x)*w)),D&&f.moveCamera(new l(-Math.sin(f.camera.rot.y+Math.PI/2)*w,0,-Math.cos(f.camera.rot.y+Math.PI/2)*w)),T&&f.moveCamera(new l(-Math.sin(f.camera.rot.y)*Math.cos(f.camera.rot.x)*w,0,-Math.cos(f.camera.rot.y)*Math.cos(f.camera.rot.x)*w)),R&&f.moveCamera(new l(Math.sin(f.camera.rot.y+Math.PI/2)*w,0,Math.cos(f.camera.rot.y+Math.PI/2)*w)),A&&f.moveCamera(new l(0,-w,0)),k&&f.moveCamera(new l(0,w,0))})();
